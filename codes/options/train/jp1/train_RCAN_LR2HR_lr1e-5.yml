# Not exactly the same as SRResNet in <Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network>
# With 16 Residual blocks w/o BN

#### general settings
name: rcan_jp1_train_lr2hr_lr1e-5
use_tb_logger: false
model: sr
distortion: sr
scale: 4
gpu_ids: [0]

#### datasets
datasets:
  train:
    name: jp1_train_lr2hr
    mode: LQGT
    dataroot_GT: ../sst_datasets/HR/jp1/train
    dataroot_LQ: ../sst_datasets/LR/jp1/train

    use_shuffle: true
    n_workers: 6  # per GPU
    batch_size: 32
    GT_size: 64
    use_flip: false
    use_rot: false
    color: gray
  val:
    name: jp1_valid_lr2hr
    mode: LQGT
    dataroot_GT: ../sst_datasets/HR/jp1/valid
    dataroot_LQ: ../sst_datasets/LR/jp1/valid

#### network structures
network_G:
  which_model_G: RCAN
  in_nc: 1
  out_nc: 1
  nf: 64
  nb: 16
  upscale: 4

#### path
path:
  pretrain_model_G: ~
  strict_load: true
  resume_state: ~

#### training settings: learning rate scheme, loss
train:
  lr_G: !!float 1e-5
  lr_scheme: CosineAnnealingLR_Restart
  beta1: 0.9
  beta2: 0.99
  niter: 25000
  warmup_iter: -1  # no warm up
  T_period: [25000, 250000, 250000, 250000]
  restarts: [25000, 500000, 750000]
  restart_weights: [1, 1, 1]
  eta_min: !!float 1e-7

  pixel_criterion: l1
  pixel_weight: 1.0

  manual_seed: 10
  val_freq: 263  # !!float 1e2

#### logger
logger:
  print_freq: 263
  save_checkpoint_freq: 263
